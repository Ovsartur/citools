///////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией работы команды help
//
///////////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать asserts
#Использовать v8storage
#Использовать v8rac
#Использовать v8runner
#Использовать tempfiles

Перем Лог;

Процедура НастроитьКоманду(Знач Команда, Знач Парсер) Экспорт

	Парсер.ДобавитьПозиционныйПараметрКоманды(Команда, "ИмяБазы", "Имя информационной базы, которую нужно проверить");
	
КонецПроцедуры // НастроитьКоманду

// Выполняет логику команды
// 
// Параметры:
//   ПараметрыКоманды - Соответствие - Соответствие ключей командной строки и их значений
//   Приложение - Модуль - Модуль менеджера приложения
//
Функция ВыполнитьКоманду(Знач ПараметрыКоманды, Знач Приложение) Экспорт
	
	Лог = Приложение.ПолучитьЛог();
	Лог.Информация("Запуск процесса обновление конфигурации базы данных");

	КаталогСборки = ПараметрыКоманды.Получить("TEMP_WORKDIR");
	ИнформационнаяБаза = ПараметрыКоманды["ИмяБазы"];
	Если ИнформационнаяБаза = Неопределено Тогда
		Приложение.ЗавершитьРаботуПриложенияСОшибкой("Попытка выполнения команды без указания имени базы");
	КонецЕсли;

	СтрокаСоединенияСРабочейБазой = ОбщиеМетоды.ПолучитьСтрокуСоединенияСРабочейБазой(ПараметрыКоманды);
	Если ЗначениеЗаполнено(ПараметрыКоманды["uccode"]) Тогда
		СтрокаСоединенияСРабочейБазой = СтрШаблон("%1 /UC %2", СтрокаСоединенияСРабочейБазой, ПараметрыКоманды["uccode"]);
	КонецЕсли;
	ПараметрыАвторизацииРабочаяБаза = ОбщиеМетоды.ПолучитьПараметрыАвторизацииВРабочейБазе(ПараметрыКоманды);

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.УстановитьКонтекст(СтрокаСоединенияСРабочейБазой, ПараметрыАвторизацииРабочаяБаза.Логин, ПараметрыАвторизацииРабочаяБаза.Пароль);

	Попытка
		Конфигуратор.ОбновитьКонфигурациюБазыДанных();
	Исключение
		Приложение.ЗавершитьРаботуПриложенияСОшибкой(СтрШаблон("Не удалось обновить конфигурацию базы данных. Описание: %1", ОписаниеОшибки()));
	КонецПопытки;

	Лог.Отладка("Конфигурация базы данных обновлена");

	// Устанавливаем номер версии хранилища, загруженного в рабочую базу в константу реми_НомерВерсииХранилищаРелиз
	КаталогВременныхФайловСборки = ОбъединитьПути(КаталогСборки, ИнформационнаяБаза);
	ПутьКФайлу = ОбъединитьПути(КаталогВременныхФайловСборки, "versions");
	СтруктураДанных = ОбщиеМетоды.ЗагрузитьФайлВСтруктуру(ПутьКФайлу);
	
	Лог.Отладка(СтрШаблон("Устанавливаю COM соединение с рабочей базой для установки в константе номера версии хранилища ""%1""", СтруктураДанных.ВерсияХранилища));
	COMСоединение = ОбщиеМетоды.ПолучитьCOMСоединениеСБазой(ПараметрыКоманды, СтрокаСоединенияСРабочейБазой);
	COMСоединение.реми_Деплой.УстановитьНомерВерсииХранилища(СтруктураДанных.ВерсияХранилища);
	ОсвободитьОбъект(COMСоединение);
	COMСоединение = Неопределено;
	ВыполнитьСборкуМусора();
	Лог.Отладка("COM соединение освобождено");
				
	Возврат Приложение.РезультатыКоманд().Успех;
		
КонецФункции // ВыполнитьКоманду
